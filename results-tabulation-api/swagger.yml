openapi: 3.0.0
info:
  description: |
    Election Tally Sheet Service.
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "2.0.0-oas3"
  title: Tally Sheet
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  - name: Tally Sheet
    description: Access to tally sheets
  - name: Invoice
    description: Access to invoices
  - name: Stationary
    description: Access to stationaries
  - name: Invoice Stationary
    description: Access to stationaries
  - name: System Testing
    description: Endpoints required for testing purpose only. These are to be removed.

paths:

  /healthz:
    get:
      tags:
        - Election
        - Health
        - Check
        - System
      summary: System Health Check
      operationId: api.HealthCheckApi.get
      responses:
        '200':
          description: Health Check Success!

  /system-testing/election/{electionId}/root-token:
    get:
      tags:
        - System Testing
      summary: Get all.
      operationId: api.ElectionApi.getRootToken
      parameters:
        - name: electionId
          in: path
          description: Election ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /election/{electionId}:
    get:
      tags:
        - Election
      summary: Get By Id
      operationId: api.ElectionApi.get_by_id
      parameters:
        - name: electionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - electionId
                  - electionName
                properties:
                  electionId:
                    type: integer
                    format: int64
                  electionName:
                    type: string
                  invalidVoteCategories:
                    type: array
                    items:
                      type: object
                      properties:
                        categoryDescription:
                          type: string
                        invalidVoteCategoryId:
                          type: integer
                          format: int64
                  parties:
                    type: array
                    items:
                      type: object
                      properties:
                        partyId:
                          type: string
                        partyName:
                          type: integer
                          format: int64
                        partySymbol:
                          type: string
                        partyAbbreviation:
                          type: string
                        partySymbolFile:
                          type: object
                        candidates:
                          type: array
                          items:
                            type: object
                            properties:
                              candidateId:
                                type: string
                              candidateName:
                                type: integer
                                format: int64
                              candidateProfileImageFile:
                                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /election:
    get:
      tags:
        - Election
      summary: Get all.
      operationId: api.ElectionApi.get_all
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
        - name: parentElectionId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: rootElectionId
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - electionId
                    - electionName
                  properties:
                    electionId:
                      type: integer
                      format: int64
                    electionName:
                      type: string
                    invalidVoteCategories:
                      type: array
                      items:
                        type: object
                        properties:
                          categoryDescription:
                            type: string
                          invalidVoteCategoryId:
                            type: integer
                            format: int64
                    parties:
                      type: array
                      items:
                        type: object
                        properties:
                          partyId:
                            type: string
                          partyName:
                            type: integer
                            format: int64
                          partySymbol:
                            type: string
                          partyAbbreviation:
                            type: string
                          partySymbolFile:
                            type: object
                          candidates:
                            type: array
                            items:
                              type: object
                              properties:
                                candidateId:
                                  type: string
                                candidateName:
                                  type: integer
                                  format: int64
                                candidateProfileImageFile:
                                  type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    post:
      tags:
        - Election
      summary: Create election
      operationId: api.ElectionApi.create
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                electionName:
                  description: Election name
                  type: string
                electionTemplateName:
                  description: Election template name
                  type: string
                pollingStationsDataset:
                  description: Polling stations CSV file
                  type: string
                  format: binary
                invalidVoteCategoriesDataset:
                  description: Invalid vote categories CSV file
                  type: string
                  format: binary
                partyCandidatesDataset:
                  description: Party candidate CSV file
                  type: string
                  format: binary
                postalCountingCentresDataset:
                  description: Postal counting centres CSV file
                  type: string
                  format: binary
                numberOfSeatsDataset:
                  description: number of seats allocated CSV file
                  type: string
                  format: binary
              required:
                - electionName
                - pollingStationsDataset
                - invalidVoteCategoriesDataset
                - partyCandidatesDataset
                - postalCountingCentresDataset
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - electionId
                    - electionName
                  properties:
                    electionId:
                      type: integer
                      format: int64
                    electionName:
                      type: string
                    invalidVoteCategories:
                      type: array
                      items:
                        type: object
                        properties:
                          categoryDescription:
                            type: string
                          invalidVoteCategoryId:
                            type: integer
                            format: int64
                    parties:
                      type: array
                      items:
                        type: object
                        properties:
                          partyId:
                            type: string
                          partyName:
                            type: integer
                            format: int64
                          partySymbol:
                            type: string
                          partyAbbreviation:
                            type: string
                          partySymbolFile:
                            type: object
                          candidates:
                            type: array
                            items:
                              type: object
                              properties:
                                candidateId:
                                  type: string
                                candidateName:
                                  type: integer
                                  format: int64
                                candidateProfileImageFile:
                                  type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

#  /proof/upload:
#    put:
#      tags:
#        - Proof
#      summary: Upload a proof.
#      operationId: api.ProofApi.upload_file
#      responses:
#        '200':
#          description: Successful operation.
#          content:
#            application/json:
#              schema:
#                type: object
#        '400':
#          description: Bad request.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '401':
#          description: Unauthorized.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '404':
#          description: Resource was not found.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '500':
#          description: Unexpected error.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#      requestBody:
#        content:
#          multipart/form-data:
#            schema:
#              type: object
#              properties:
#                proofId:
#                  type: integer
#                  format: int64
#                scannedFile:
#                  type: string
#                  format: binary
#        description: Proof file
#        required: True
#
#  /proof/{proofId}/finish:
#    put:
#      tags:
#        - Proof
#      summary: Create.
#      operationId: api.ProofApi.finish
#      parameters:
#        - name: proofId
#          required: true
#          in: path
#          schema:
#            type: integer
#            format: int64
#      responses:
#        '200':
#          description: Successful operation.
#          content:
#            application/json:
#              schema:
#                type: object
#        '400':
#          description: Bad request.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '401':
#          description: Unauthorized.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '404':
#          description: Resource was not found.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '500':
#          description: Unexpected error.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#
#  /proof/{proofId}:
#    get:
#      tags:
#        - Proof
#      summary: Create.
#      operationId: api.ProofApi.get_by_id
#      parameters:
#        - name: proofId
#          required: true
#          in: path
#          schema:
#            type: integer
#            format: int64
#      responses:
#        '200':
#          description: Successful operation.
#          content:
#            application/json:
#              schema:
#                type: object
#        '400':
#          description: Bad request.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '401':
#          description: Unauthorized.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '404':
#          description: Resource was not found.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '500':
#          description: Unexpected error.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'

#  /file/{fileId}:
#    get:
#      tags:
#        - Files
#      summary: Get by ID
#      operationId: api.FileApi.get_by_id
#      parameters:
#        - name: fileId
#          required: true
#          in: path
#          schema:
#            type: integer
#            format: int64
#      responses:
#        '200':
#          description: OK
#        '400':
#          description: Bad request.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '401':
#          description: Unauthorized.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '404':
#          description: Resource was not found.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '500':
#          description: Unexpected error.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#
#  /file/{fileId}/inline:
#    get:
#      tags:
#        - Files
#      summary: Get by ID
#      operationId: api.FileApi.get_inline_file
#      parameters:
#        - name: fileId
#          required: true
#          in: path
#          schema:
#            type: integer
#            format: int64
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                type: object
#        '400':
#          description: Bad request.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '401':
#          description: Unauthorized.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '404':
#          description: Resource was not found.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '500':
#          description: Unexpected error.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#
#  /file/{fileId}/download:
#    get:
#      tags:
#        - Files
#      summary: Get by ID
#      operationId: api.FileApi.get_download_file
#      parameters:
#        - name: fileId
#          required: true
#          in: path
#          schema:
#            type: integer
#            format: int64
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                type: object
#        '400':
#          description: Bad request.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '401':
#          description: Unauthorized.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '404':
#          description: Resource was not found.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '500':
#          description: Unexpected error.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'

  /area:
    get:
      tags:
        - Area
      summary: Get by ID
      operationId: api.AreaApi.get_all
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
        - name: electionId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: associatedAreaId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: areaType
          required: false
          in: query
          schema:
            type: string
            enum:
              - ElectionCommission
              - DistrictCentre
              - CountingCentre
              - PostalVoteCountingCentre
              - PollingStation
              - Country
              - Province
              - AdministrativeDistrict
              - ElectoralDistrict
              - PollingDivision
              - PollingDistrict
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /area/{areaId}:
    get:
      tags:
        - Area
      summary: Get by ID
      operationId: api.AreaApi.get_by_id
      parameters:
        - name: areaId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet:
    get:
      tags:
        - Tally Sheet
      summary: Get all the tally sheets.
      operationId: api.TallySheetApi.getAll
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
        - name: electionId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: areaId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: createdBy
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: tallySheetCode
          required: false
          in: query
          schema:
            type: string
        - name: voteType
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - electionId
                    - officeId
                    - tallySheetCode
                  properties:
                    id:
                      type: integer
                      format: int64
                      default: 1
                    version:
                      type: integer
                      format: int64
                      default: 1
                    electionId:
                      type: integer
                      format: int64
                      default: 1
                    officeId:
                      type: integer
                      format: int64
                      default: 1
                    createdBy:
                      type: integer
                      format: int64
                      default: 1
                    createdAt:
                      type: string
                      format: date-time
                    tallySheetCode:
                      type: string
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/{tallySheetId}:
    get:
      tags:
        - Tally Sheet
      summary: Get tally sheet by ID
      operationId: api.TallySheetApi.get_by_id
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - electionId
                  - officeId
                  - tallySheetCode
                properties:
                  id:
                    type: integer
                    format: int64
                    default: 1
                  version:
                    type: integer
                    format: int64
                    default: 1
                  electionId:
                    type: integer
                    format: int64
                    default: 1
                  officeId:
                    type: integer
                    format: int64
                    default: 1
                  createdBy:
                    type: integer
                    format: int64
                    default: 1
                  createdAt:
                    type: string
                    format: date-time
                  tallySheetCode:
                    type: string
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/{tallySheetId}/version:
    post:
      tags:
        - Tally Sheet Version
      summary: Create tally sheet version
      operationId: api.TallySheetVersionApi.create
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: array
        description: Tally sheet row contents.
        required: true
  /tally-sheet/{tallySheetId}/version/{tallySheetVersionId}:
    get:
      tags:
        - Tally Sheet Version
      summary: Get tally sheet version by ID
      operationId: api.TallySheetVersionApi.get_by_id
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
        - name: tallySheetVersionId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - content
                  - summary
                properties:
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        candidateId:
                          type: integer
                          format: int64
                        count:
                          type: integer
                        countInWords:
                          type: string
                  summary:
                    type: object
                    properties:
                      rejectedVoteCount:
                        type: integer
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/{tallySheetId}/version/{tallySheetVersionId}/letter/html:
    get:
      tags:
        - Tally Sheet Version Export
      summary: Get by ID
      operationId: api.TallySheetVersionApi.letter_html
      parameters:
        - name: tallySheetId
          required: true
          in: path
          schema:
            type: integer
            format: int64
        - name: tallySheetVersionId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/{tallySheetId}/version/{tallySheetVersionId}/html:
    get:
      tags:
        - Tally Sheet Version Export
      summary: Get by ID
      operationId: api.TallySheetVersionApi.html
      parameters:
        - name: tallySheetId
          required: true
          in: path
          schema:
            type: integer
            format: int64
        - name: tallySheetVersionId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'


  /tally-sheet/{tallySheetId}/version/{tallySheetVersionId}/letter/pdf:
    get:
      tags:
        - Tally Sheet Version Export
      summary: Get by ID
      operationId: api.TallySheetVersionApi.letter_pdf
      parameters:
        - name: tallySheetId
          required: true
          in: path
          schema:
            type: integer
            format: int64
        - name: tallySheetVersionId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/{tallySheetId}/version/{tallySheetVersionId}/pdf:
    get:
      tags:
        - Tally Sheet Version Export
      summary: Get by ID
      operationId: api.TallySheetVersionApi.pdf
      parameters:
        - name: tallySheetId
          required: true
          in: path
          schema:
            type: integer
            format: int64
        - name: tallySheetVersionId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/{tallySheetId}/empty/html:
    get:
      tags:
        - Tally Sheet Version Export
      summary: Get by ID
      operationId: api.TallySheetVersionApi.create_empty_and_get_html
      parameters:
        - name: tallySheetId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/{tallySheetId}/workflow:
    put:
      tags:
        - Tally Sheet
      summary: Execute tally sheet workflow
      operationId: api.TallySheetApi.workflow
      parameters:
        - name: tallySheetId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - workflowActionId
              properties:
                workflowActionId:
                  type: integer
                  format: int64

  /tally-sheet/workflow/proof/upload:
    put:
      tags:
        - Proof
      summary: Upload a proof to the tally sheet.
      operationId: api.TallySheetApi.upload_workflow_proof_file
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                tallySheetId:
                  type: integer
                  format: int64
                scannedFile:
                  type: string
                  format: binary
        description: Proof file
        required: True

  /tally-sheet/{tallySheetId}/workflow/logs:
    get:
      tags:
        - Files
      summary: Get by ID
      operationId: api.TallySheetApi.get_workflow_logs
      parameters:
        - name: tallySheetId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/{tallySheetId}/workflow/proof/file/{fileId}:
    get:
      tags:
        - Files
      summary: Get by ID
      operationId: api.TallySheetApi.get_workflow_proof_file
      parameters:
        - name: fileId
          required: true
          in: path
          schema:
            type: integer
            format: int64
        - name: tallySheetId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/{tallySheetId}/workflow/proof/file/{fileId}/inline:
    get:
      tags:
        - Files
      summary: Get by ID
      operationId: api.TallySheetApi.get_workflow_proof_inline_file
      parameters:
        - name: fileId
          required: true
          in: path
          schema:
            type: integer
            format: int64
        - name: tallySheetId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/{tallySheetId}/workflow/proof/file/{fileId}/download:
    get:
      tags:
        - Files
      summary: Get by ID
      operationId: api.TallySheetApi.get_workflow_proof_download_file
      parameters:
        - name: fileId
          required: true
          in: path
          schema:
            type: integer
            format: int64
        - name: tallySheetId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '401':
            description: Unauthorized.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Resource was not found.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Unexpected error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'

externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'

components:
  #  securitySchemes:
  #    organization_auth:
  #      type: oauth2
  #      flows:
  #        implicit:
  #          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
  #          scopes:
  #            'write:org': modify
  #            'read:org': read
  #    api_key:
  #      type: apiKey
  #      name: api_key
  #      in: header
  #    jwt:
  #      type: http
  #      scheme: bearer
  #      bearerFormat: JWT
  #      x-bearerInfoFunc: auth.decode_token
  schemas:
    ApiResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
        title:
          type: string
        detail:
          type: string

#security:
#  - jwt: []
