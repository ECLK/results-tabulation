openapi: 3.0.0
info:
  description: |
    Election Tally Sheet Service.
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "2.0.0-oas3"
  title: Tally Sheet
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  - name: Tally Sheet
    description: Access to tally sheets
  - name: Invoice
    description: Access to invoices
  - name: Stationary
    description: Access to stationaries
  - name: Invoice Stationary
    description: Access to stationaries
  - name: System Testing
    description: Endpoints required for testing purpose only. These are to be removed.

paths:

  /system-testing/election/{electionId}/root-token:
    get:
      tags:
        - System Testing
      summary: Get all.
      operationId: api.ElectionApi.getRootToken
      parameters:
        - name: electionId
          in: path
          description: Election ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /election:
    get:
      tags:
        - Election
      summary: Get all.
      operationId: api.ElectionApi.get_all
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - electionId
                    - electionName
                  properties:
                    electionId:
                      type: integer
                      format: int64
                    electionName:
                      type: string
                    invalidVoteCategories:
                      type: array
                      items:
                        type: object
                        properties:
                          categoryDescription:
                            type: string
                          invalidVoteCategoryId:
                            type: integer
                            format: int64
                    parties:
                      type: array
                      items:
                        type: object
                        properties:
                          partyId:
                            type: string
                          partyName:
                            type: integer
                            format: int64
                          partySymbol:
                            type: string
                          partyAbbreviation:
                            type: string
                          partySymbolFile:
                            type: object
                          candidates:
                            type: array
                            items:
                              type: object
                              properties:
                                candidateId:
                                  type: string
                                candidateName:
                                  type: integer
                                  format: int64
                                candidateProfileImageFile:
                                  type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    post:
      tags:
        - Election
      summary: Create election
      operationId: api.ElectionApi.create
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  description: Election name
                  type: string
                data:
                  description: Data CSV file
                  type: string
                  format: binary
                invalidVoteCategories:
                  description: Invalid vote categories CSV file
                  type: string
                  format: binary
                partyCandidate:
                  description: Party candidate CSV file
                  type: string
                  format: binary
                postalData:
                  description: Postal data CSV file
                  type: string
                  format: binary
              required:
                - name
                - data
                - invalidVoteCategories
                - partyCandidate
                - postalData
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - electionId
                    - electionName
                  properties:
                    electionId:
                      type: integer
                      format: int64
                    electionName:
                      type: string
                    invalidVoteCategories:
                      type: array
                      items:
                        type: object
                        properties:
                          categoryDescription:
                            type: string
                          invalidVoteCategoryId:
                            type: integer
                            format: int64
                    parties:
                      type: array
                      items:
                        type: object
                        properties:
                          partyId:
                            type: string
                          partyName:
                            type: integer
                            format: int64
                          partySymbol:
                            type: string
                          partyAbbreviation:
                            type: string
                          partySymbolFile:
                            type: object
                          candidates:
                            type: array
                            items:
                              type: object
                              properties:
                                candidateId:
                                  type: string
                                candidateName:
                                  type: integer
                                  format: int64
                                candidateProfileImageFile:
                                  type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /ballot:
    get:
      tags:
        - Stationary
      summary: Get all.
      operationId: api.BallotApi.get_all
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
        - name: electionId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: ballotId
          required: false
          in: query
          schema:
            type: string
        - name: ballotType
          required: false
          in: query
          schema:
            type: string
            enum:
              - Ordinary
              - Tendered
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - ballotId
                    - stationaryItemId
                    - electionId
                  properties:
                    ballotId:
                      type: string
                    stationaryItemId:
                      type: integer
                      format: int64
                    electionId:
                      type: integer
                      format: int64
                    ballotType:
                      type: string
                      enum:
                        - Ordinary
                        - Tendered
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    post:
      tags:
        - Stationary
      summary: Create.
      operationId: api.BallotApi.create
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - ballotId
                  - stationaryItemId
                  - electionId
                properties:
                  ballotId:
                    type: string
                  stationaryItemId:
                    type: integer
                    format: int64
                  electionId:
                    type: integer
                    format: int64
                  ballotType:
                    type: string
                    enum:
                      - Ordinary
                      - Tendered
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ballotId
                - electionId
              properties:
                ballotId:
                  type: string
                electionId:
                  type: integer
                  format: int64
                ballotType:
                  type: string
                  enum:
                    - Ordinary
                    - Tendered
        description: Ballot Object.
        required: True

  /ballot-book:
    get:
      tags:
        - Stationary
      summary: Get all.
      operationId: api.BallotBookApi.get_all
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
        - name: electionId
          required: false
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - stationaryItemId
                    - fromBallotId
                    - toBallotId
                    - electionId
                  properties:
                    fromBallotId:
                      type: string
                    toBallotId:
                      type: string
                    stationaryItemId:
                      type: integer
                      format: int64
                    electionId:
                      type: integer
                      format: int64
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    post:
      tags:
        - Stationary
      summary: Create.
      operationId: api.BallotBookApi.create
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - stationaryItemId
                  - fromBallotId
                  - toBallotId
                  - electionId
                properties:
                  fromBallotId:
                    type: string
                  toBallotId:
                    type: string
                  stationaryItemId:
                    type: integer
                    format: int64
                  electionId:
                    type: integer
                    format: int64
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - fromBallotId
                - toBallotId
                - electionId
              properties:
                fromBallotId:
                  type: string
                toBallotId:
                  type: string
                electionId:
                  type: integer
                  format: int64
        description: Ballot Object.
        required: True

  /ballot-box:
    get:
      tags:
        - Stationary
      summary: Get all.
      operationId: api.BallotBoxApi.get_all
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
        - name: electionId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: ballotBoxId
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - ballotBoxId
                    - stationaryItemId
                    - electionId
                  properties:
                    ballotBoxId:
                      type: string
                    stationaryItemId:
                      type: integer
                      format: int64
                    electionId:
                      type: integer
                      format: int64
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    post:
      tags:
        - Stationary
      summary: Create.
      operationId: api.BallotBoxApi.create
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - ballotBoxId
                  - stationaryItemId
                  - electionId
                properties:
                  ballotBoxId:
                    type: string
                  stationaryItemId:
                    type: integer
                    format: int64
                  electionId:
                    type: integer
                    format: int64
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ballotBoxId
                - electionId
              properties:
                ballotBoxId:
                  type: string
                electionId:
                  type: integer
                  format: int64
        description: BallotBox Object.
        required: True

  /invoice:
    get:
      tags:
        - Invoice
      summary: Get all.
      operationId: api.InvoiceApi.get_all
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
        - name: electionId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: issuingOfficeId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: receivingOfficeId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: issuedBy
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: issuedTo
          required: false
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - invoiceId
                    - electionId
                    - issuingOfficeId
                    - receivingOfficeId
                    - issuedBy
                    - issuedTo
                    - issuedAt
                    - confirmed
                  properties:
                    invoiceId:
                      type: integer
                      format: int64
                    electionId:
                      type: integer
                      format: int64
                    issuingOfficeId:
                      type: integer
                      format: int64
                    receivingOfficeId:
                      type: integer
                      format: int64
                    issuedBy:
                      type: integer
                      format: int64
                    issuedTo:
                      type: integer
                      format: int64
                    issuedAt:
                      type: string
                      format: date-time
                    confirmed:
                      type: boolean
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    post:
      tags:
        - Invoice
      summary: Create.
      operationId: api.InvoiceApi.create
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - invoiceId
                  - electionId
                  - issuingOfficeId
                  - receivingOfficeId
                  - issuedBy
                  - issuedTo
                  - issuedAt
                  - confirmed
                properties:
                  invoiceId:
                    type: integer
                    format: int64
                  electionId:
                    type: integer
                    format: int64
                  issuingOfficeId:
                    type: integer
                    format: int64
                  receivingOfficeId:
                    type: integer
                    format: int64
                  issuedBy:
                    type: integer
                    format: int64
                  issuedTo:
                    type: integer
                    format: int64
                  issuedAt:
                    type: string
                    format: date-time
                  confirmed:
                    type: boolean
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - electionId
                - issuingOfficeId
                - receivingOfficeId
                - issuedTo
              properties:
                electionId:
                  type: integer
                  format: int64
                issuingOfficeId:
                  type: integer
                  format: int64
                receivingOfficeId:
                  type: integer
                  format: int64
                issuedTo:
                  type: integer
                  format: int64
        description: Invoice Object.
        required: True

  /invoice/{invoiceId}:
    get:
      tags:
        - Invoice
      summary: Create.
      operationId: api.InvoiceApi.get_by_id
      parameters:
        - name: invoiceId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - invoiceId
                  - electionId
                  - issuingOfficeId
                  - receivingOfficeId
                  - issuedBy
                  - issuedTo
                  - issuedAt
                  - confirmed
                properties:
                  invoiceId:
                    type: integer
                    format: int64
                  electionId:
                    type: integer
                    format: int64
                  issuingOfficeId:
                    type: integer
                    format: int64
                  receivingOfficeId:
                    type: integer
                    format: int64
                  issuedBy:
                    type: integer
                    format: int64
                  issuedTo:
                    type: integer
                    format: int64
                  issuedAt:
                    type: string
                    format: date-time
                  confirmed:
                    type: boolean
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    delete:
      tags:
        - Invoice
      summary: Create.
      operationId: api.InvoiceApi.delete
      parameters:
        - name: invoiceId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: integer
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /invoice/{invoiceId}/confirm:
    put:
      tags:
        - Invoice
      summary: Create.
      operationId: api.InvoiceApi.confirm
      parameters:
        - name: invoiceId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - invoiceId
                  - electionId
                  - issuingOfficeId
                  - receivingOfficeId
                  - issuedBy
                  - issuedTo
                  - issuedAt
                  - confirmed
                properties:
                  invoiceId:
                    type: integer
                    format: int64
                  electionId:
                    type: integer
                    format: int64
                  issuingOfficeId:
                    type: integer
                    format: int64
                  receivingOfficeId:
                    type: integer
                    format: int64
                  issuedBy:
                    type: integer
                    format: int64
                  issuedTo:
                    type: integer
                    format: int64
                  issuedAt:
                    type: string
                    format: date-time
                  confirmed:
                    type: boolean
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /invoice/stationary-item:
    get:
      tags:
        - Invoice Stationary
      summary: Get all.
      operationId: api.InvoiceStationaryItemApi.get_all
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
        - name: invoiceId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: stationaryItemId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: received
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: receivedBy
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: receivedFrom
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: receivedOffice
          required: false
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - invoiceId
                    - stationaryItemId
                    - received
                    - receivedBy
                    - receivedFrom
                    - receivedOfficeId
                    - receivedAt
                  properties:
                    invoiceId:
                      type: integer
                      format: int64
                    stationaryItemId:
                      type: integer
                      format: int64
                    received:
                      type: boolean
                      default: false
                    receivedBy:
                      type: integer
                      format: int64
                      nullable: true
                    receivedFrom:
                      type: integer
                      format: int64
                      nullable: true
                    receivedOfficeId:
                      type: integer
                      format: int64
                      nullable: true
                    receivedAt:
                      type: string
                      format: date-time
                      nullable: true
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /invoice/{invoiceId}/stationary-item:
    post:
      tags:
        - Invoice Stationary
      summary: Create.
      operationId: api.InvoiceStationaryItemApi.create
      parameters:
        - name: invoiceId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - invoiceId
                  - stationaryItemId
                  - received
                properties:
                  invoiceId:
                    type: integer
                    format: int64
                  stationaryItemId:
                    type: integer
                    format: int64
                  received:
                    type: boolean
                    default: false
                  receivedBy:
                    type: integer
                    format: int64
                    nullable: true
                  receivedFrom:
                    type: integer
                    format: int64
                    nullable: true
                  receivedOfficeId:
                    type: integer
                    format: int64
                    nullable: true
                  receivedAt:
                    type: string
                    format: date-time
                    nullable: true
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - stationaryItemId
              properties:
                stationaryItemId:
                  type: integer
                  format: int64
        description: Invoice Stationary Item Object.
        required: True

  /invoice/{invoiceId}/stationary-item/{stationaryItemId}:
    get:
      tags:
        - Invoice Stationary
      summary: Get all.
      operationId: api.InvoiceStationaryItemApi.get_by_id
      parameters:
        - name: invoiceId
          required: true
          in: path
          schema:
            type: integer
            format: int64
        - name: stationaryItemId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - invoiceId
                  - stationaryItemId
                  - received
                  - receivedBy
                  - receivedFrom
                  - receivedOfficeId
                  - receivedAt
                properties:
                  invoiceId:
                    type: integer
                    format: int64
                  stationaryItemId:
                    type: integer
                    format: int64
                  received:
                    type: boolean
                    default: false
                  receivedBy:
                    type: integer
                    format: int64
                    nullable: true
                  receivedFrom:
                    type: integer
                    format: int64
                    nullable: true
                  receivedOfficeId:
                    type: integer
                    format: int64
                    nullable: true
                  receivedAt:
                    type: string
                    format: date-time
                    nullable: true
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    delete:
      tags:
        - Invoice Stationary
      summary: Get all.
      operationId: api.InvoiceStationaryItemApi.delete
      parameters:
        - name: invoiceId
          required: true
          in: path
          schema:
            type: integer
            format: int64
        - name: stationaryItemId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: integer
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /invoice/stationary-item/receive:
    put:
      tags:
        - Invoice Stationary
      summary: Create.
      operationId: api.InvoiceStationaryItemApi.receive
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: integer
                    format: int64
                  stationaryItemId:
                    type: integer
                    format: int64
                  received:
                    type: boolean
                    default: false
                  receivedBy:
                    type: integer
                    format: int64
                  receivedFrom:
                    type: integer
                    format: int64
                  receivedOfficeId:
                    type: integer
                    format: int64
                  receivedAt:
                    type: string
                    format: date-time
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                invoiceId:
                  type: integer
                  format: int64
                stationaryItemId:
                  type: integer
                  format: int64
                receivedFrom:
                  type: integer
                  format: int64
                receivedOfficeId:
                  type: integer
                  format: int64
                scannedImages:
                  type: string
                  format: binary
        #            encoding:
        #              scannedImages:
        #                contentType: image/png, image/gif, image/jpeg, image/jpg
        description: Invoice Stationary Item Object.
        required: True

  /proof/upload:
    put:
      tags:
        - Proof
      summary: Upload a proof.
      operationId: api.ProofApi.upload_file
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                proofId:
                  type: integer
                  format: int64
                scannedFile:
                  type: string
                  format: binary
        description: Proof file
        required: True

  /proof/{proofId}/finish:
    put:
      tags:
        - Proof
      summary: Create.
      operationId: api.ProofApi.finish
      parameters:
        - name: proofId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /proof/{proofId}:
    get:
      tags:
        - Proof
      summary: Create.
      operationId: api.ProofApi.get_by_id
      parameters:
        - name: proofId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /file/{fileId}:
    get:
      tags:
        - Files
      summary: Get by ID
      operationId: api.FileApi.get_by_id
      parameters:
        - name: fileId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /file/{fileId}/inline:
    get:
      tags:
        - Files
      summary: Get by ID
      operationId: api.FileApi.get_inline_file
      parameters:
        - name: fileId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /file/{fileId}/download:
    get:
      tags:
        - Files
      summary: Get by ID
      operationId: api.FileApi.get_download_file
      parameters:
        - name: fileId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /area:
    get:
      tags:
        - Area
      summary: Get by ID
      operationId: api.AreaApi.get_all
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
        - name: electionId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: associatedAreaId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: areaType
          required: false
          in: query
          schema:
            type: string
            enum:
              - ElectionCommission
              - DistrictCentre
              - CountingCentre
              - PostalVoteCountingCentre
              - PollingStation
              - Country
              - Province
              - AdministrativeDistrict
              - ElectoralDistrict
              - PollingDivision
              - PollingDistrict
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet:
    get:
      tags:
        - Tally Sheet
      summary: Get all the tally sheets.
      operationId: api.TallySheetApi.getAll
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
        - name: electionId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: officeId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: createdBy
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: tallySheetCode
          required: false
          in: query
          schema:
            type: string
            enum:
              - CE-201
              - CE-201-PV
              - PRE-41
              - PRE-21
              - PRE-30-PD
              - PRE-30-ED
              - PRE_ALL_ISLAND_RESULTS_BY_ELECTORAL_DISTRICTS
              - PRE_ALL_ISLAND_RESULTS
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TallySheet'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/{tallySheetId}:
    get:
      tags:
        - Tally Sheet
      summary: Get tally sheet by ID
      operationId: api.TallySheetApi.get_by_id
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TallySheet'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/PRE-41/{tallySheetId}/version:
    post:
      tags:
        - Tally Sheet Version
      summary: Create tally sheet version
      operationId: api.TallySheetVersionApi.TallySheetVersionPRE41Api.create
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - content
                  - summary
                properties:
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        candidateId:
                          type: integer
                          format: int64
                        count:
                          type: integer
                        countInWords:
                          type: string
                  summary:
                    type: object
                    properties:
                      rejectedVoteCount:
                        type: integer
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - content
                - summary
              properties:
                content:
                  type: array
                  items:
                    type: object
                    properties:
                      candidateId:
                        type: integer
                        format: int64
                      count:
                        type: integer
                      countInWords:
                        type: string
                summary:
                  type: object
                  properties:
                    rejectedVoteCount:
                      type: integer
        description: Updated tally sheet object.
        required: true
  /tally-sheet/PRE-41/{tallySheetId}/version/{tallySheetVersionId}:
    get:
      tags:
        - Tally Sheet Version
      summary: Get tally sheet version by ID
      operationId: api.TallySheetVersionApi.TallySheetVersionPRE41Api.get_by_id
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
        - name: tallySheetVersionId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - content
                  - summary
                properties:
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        candidateId:
                          type: integer
                          format: int64
                        count:
                          type: integer
                        countInWords:
                          type: string
                  summary:
                    type: object
                    properties:
                      rejectedVoteCount:
                        type: integer
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/PRE-21/{tallySheetId}/version:
    post:
      tags:
        - Tally Sheet Version
      summary: Create tally sheet version
      operationId: api.TallySheetVersionApi.TallySheetVersionPRE21Api.create
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - content
                properties:
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        candidateId:
                          type: integer
                          format: int64
                        count:
                          type: integer
                          format: int64
                        countInWords:
                          type: string
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: array
                  items:
                    type: object
                    properties:
                      count:
                        type: integer
                        format: int64
                      invalidVoteCategoryId:
                        type: integer
                        format: int64
        description: Updated tally sheet object.
        required: true
  /tally-sheet/PRE-21/{tallySheetId}/version/{tallySheetVersionId}:
    get:
      tags:
        - Tally Sheet Version
      summary: Get tally sheet version by ID
      operationId: api.TallySheetVersionApi.TallySheetVersionPRE21Api.get_by_id
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
        - name: tallySheetVersionId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TallySheet'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/CE-201/{tallySheetId}/version:
    post:
      tags:
        - Tally Sheet Version
      summary: Create tally sheet version
      operationId: api.TallySheetVersionApi.TallySheetVersionCE201Api.create
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - content
                properties:
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        areaId:
                          type: integer
                          format: int64
                        ballotBoxesIssued:
                          type: array
                          items:
                            type: string
                        ballotBoxesReceived:
                          type: array
                          items:
                            type: string
                        ballotsIssued:
                          type: integer
                          format: int64
                        ballotsReceived:
                          type: integer
                          format: int64
                        ballotsSpoilt:
                          type: integer
                          format: int64
                        ballotsUnused:
                          type: integer
                          format: int64
                        ordinaryBallotCountFromBoxCount:
                          type: integer
                          format: int64
                        tenderedBallotCountFromBoxCount:
                          type: integer
                          format: int64
                        ordinaryBallotCountFromBallotPaperAccount:
                          type: integer
                          format: int64
                        tenderedBallotCountFromBallotPaperAccount:
                          type: integer
                          format: int64
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: array
                  items:
                    type: object
                    properties:
                      areaId:
                        type: integer
                        format: int64
                      ballotBoxesIssued:
                        type: array
                        items:
                          type: string
                      ballotBoxesReceived:
                        type: array
                        items:
                          type: string
                      ballotsIssued:
                        type: integer
                        format: int64
                      ballotsReceived:
                        type: integer
                        format: int64
                      ballotsSpoilt:
                        type: integer
                        format: int64
                      ballotsUnused:
                        type: integer
                        format: int64
                      ordinaryBallotCountFromBoxCount:
                        type: integer
                        format: int64
                      tenderedBallotCountFromBoxCount:
                        type: integer
                        format: int64
                      ordinaryBallotCountFromBallotPaperAccount:
                        type: integer
                        format: int64
                      tenderedBallotCountFromBallotPaperAccount:
                        type: integer
                        format: int64
        description: Updated tally sheet object.
        required: true
  /tally-sheet/CE-201/{tallySheetId}/version/{tallySheetVersionId}:
    get:
      tags:
        - Tally Sheet Version
      summary: Get tally sheet version by ID
      operationId: api.TallySheetVersionApi.TallySheetVersionCE201Api.get_by_id
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
        - name: tallySheetVersionId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - content
                properties:
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        areaId:
                          type: integer
                          format: int64
                        ballotBoxesIssued:
                          type: array
                          items:
                            type: string
                        ballotBoxesReceived:
                          type: array
                          items:
                            type: string
                        ballotsIssued:
                          type: integer
                          format: int64
                        ballotsReceived:
                          type: integer
                          format: int64
                        ballotsSpoilt:
                          type: integer
                          format: int64
                        ballotsUnused:
                          type: integer
                          format: int64
                        ordinaryBallotCountFromBoxCount:
                          type: integer
                          format: int64
                        tenderedBallotCountFromBoxCount:
                          type: integer
                          format: int64
                        ordinaryBallotCountFromBallotPaperAccount:
                          type: integer
                          format: int64
                        tenderedBallotCountFromBallotPaperAccount:
                          type: integer
                          format: int64
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/CE-201-PV/{tallySheetId}/version:
    post:
      tags:
        - Tally Sheet Version
      summary: Create tally sheet version
      operationId: api.TallySheetVersionApi.TallySheetVersion_CE_201_PV_Api.create
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - content
                  - summary
                properties:
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        ballotBoxStationaryItemId:
                          type: integer
                          format: int64
                        numberOfPacketsInserted:
                          type: integer
                        numberOfAPacketsFound:
                          type: integer
                  summary:
                    type: object
                    properties:
                      situation:
                        type: string
                      timeOfCommencementOfCount:
                        type: string
                        format: date-time
                      numberOfAPacketsFound:
                        type: integer
                      numberOfACoversRejected:
                        type: integer
                      numberOfBCoversRejected:
                        type: integer
                      numberOfValidBallotPapers:
                        type: integer
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - content
                - summary
              properties:
                content:
                  type: array
                  items:
                    type: object
                    properties:
                      ballotBoxStationaryItemId:
                        type: integer
                        format: int64
                      numberOfPacketsInserted:
                        type: integer
                      numberOfAPacketsFound:
                        type: integer
                summary:
                  type: object
                  properties:
                    situation:
                      type: string
                    timeOfCommencementOfCount:
                      type: string
                      format: date-time
                    numberOfACoversRejected:
                      type: integer
                    numberOfBCoversRejected:
                      type: integer
                    numberOfValidBallotPapers:
                      type: integer
        description: Updated tally sheet object.
        required: true
  /tally-sheet/CE-201-PV/{tallySheetId}/version/{tallySheetVersionId}:
    get:
      tags:
        - Tally Sheet Version
      summary: Get tally sheet version by ID
      operationId: api.TallySheetVersionApi.TallySheetVersion_CE_201_PV_Api.get_by_id
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
        - name: tallySheetVersionId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - content
                  - summary
                properties:
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        ballotBoxStationaryItemId:
                          type: integer
                          format: int64
                        numberOfPacketsInserted:
                          type: integer
                        numberOfAPacketsFound:
                          type: integer
                  summary:
                    type: object
                    properties:
                      situation:
                        type: string
                      timeOfCommencementOfCount:
                        type: string
                        format: date-time
                      numberOfAPacketsFound:
                        type: integer
                      numberOfACoversRejected:
                        type: integer
                      numberOfBCoversRejected:
                        type: integer
                      numberOfValidBallotPapers:
                        type: integer
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/PRE-30-PD/{tallySheetId}/version:
    post:
      tags:
        - Tally Sheet Version
      summary: Create tally sheet version
      operationId: api.TallySheetVersionApi.TallySheetVersion_PRE_30_PD_Api.create
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /tally-sheet/PRE-30-PD/{tallySheetId}/version/{tallySheetVersionId}:
    get:
      tags:
        - Tally Sheet Version
      summary: Get tally sheet version by ID
      operationId: api.TallySheetVersionApi.TallySheetVersion_PRE_30_PD_Api.get_by_id
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
        - name: tallySheetVersionId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/PRE-30-ED/{tallySheetId}/version:
    post:
      tags:
        - Tally Sheet Version
      summary: Create tally sheet version
      operationId: api.TallySheetVersionApi.TallySheetVersion_PRE_30_ED_Api.create
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /tally-sheet/PRE-30-ED/{tallySheetId}/version/{tallySheetVersionId}:
    get:
      tags:
        - Tally Sheet Version
      summary: Get tally sheet version by ID
      operationId: api.TallySheetVersionApi.TallySheetVersion_PRE_30_ED_Api.get_by_id
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
        - name: tallySheetVersionId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/PRE_ALL_ISLAND_RESULTS/{tallySheetId}/version:
    post:
      tags:
        - Tally Sheet Version
      summary: Create tally sheet version
      operationId: api.TallySheetVersionApi.TallySheetVersion_PRE_ALL_ISLAND_RESULT_Api.create
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /tally-sheet/PRE_ALL_ISLAND_RESULTS/{tallySheetId}/version/{tallySheetVersionId}:
    get:
      tags:
        - Tally Sheet Version
      summary: Get tally sheet version by ID
      operationId: api.TallySheetVersionApi.TallySheetVersion_PRE_ALL_ISLAND_RESULT_Api.get_by_id
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
        - name: tallySheetVersionId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/PRE_ALL_ISLAND_RESULTS_BY_ELECTORAL_DISTRICTS/{tallySheetId}/version:
    post:
      tags:
        - Tally Sheet Version
      summary: Create tally sheet version
      operationId: api.TallySheetVersionApi.TallySheetVersion_PRE_ALL_ISLAND_RESULTS_BY_ELECTORAL_DISTRICTS_Api.create
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /tally-sheet/PRE_ALL_ISLAND_RESULTS_BY_ELECTORAL_DISTRICTS/{tallySheetId}/version/{tallySheetVersionId}:
    get:
      tags:
        - Tally Sheet Version
      summary: Get tally sheet version by ID
      operationId: api.TallySheetVersionApi.TallySheetVersion_PRE_ALL_ISLAND_RESULTS_BY_ELECTORAL_DISTRICTS_Api.get_by_id
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
        - name: tallySheetVersionId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/{tallySheetId}/version/{tallySheetVersionId}/html:
    get:
      tags:
        - Tally Sheet Version Export
      summary: Get by ID
      operationId: api.TallySheetVersionApi.html
      parameters:
        - name: tallySheetId
          required: true
          in: path
          schema:
            type: integer
            format: int64
        - name: tallySheetVersionId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /tally-sheet/{tallySheetId}/lock:
    put:
      tags:
        - Tally Sheet
      summary: Get by ID
      operationId: api.TallySheetApi.lock
      parameters:
        - name: tallySheetId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - lockedVersionId
              properties:
                lockedVersionId:
                  type: integer
                  format: int64

  /tally-sheet/{tallySheetId}/unlock:
    put:
      tags:
        - Tally Sheet
      summary: Get by ID
      operationId: api.TallySheetApi.unlock
      parameters:
        - name: tallySheetId
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'

components:
  securitySchemes:
    organization_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:org': modify
            'read:org': read
    api_key:
      type: apiKey
      name: api_key
      in: header
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: auth.decode_token
  schemas:
    ApiResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
        title:
          type: string
        detail:
          type: string
    TallySheetHistory:
      type: array
      items:
        type: object
        properties:
          version:
            type: integer
            format: int64
          createdBy:
            type: integer
            format: int64
          createdAt:
            type: string
            format: date-time
    TallySheet:
      type: object
      required:
        - electionId
        - officeId
        - tallySheetCode
      properties:
        id:
          type: integer
          format: int64
          default: 1
        version:
          type: integer
          format: int64
          default: 1
        electionId:
          type: integer
          format: int64
          default: 1
        officeId:
          type: integer
          format: int64
          default: 1
        createdBy:
          type: integer
          format: int64
          default: 1
        createdAt:
          type: string
          format: date-time
        tallySheetCode:
          type: string
          enum:
            - PCE-22
            - PCE-34
            - PCE-35
            - PCE-31
            - CE/ CO/ PR/ 1
            - PRE-41
            - ISSUING
            - RECEIVING


    ########################################################
    ###  Provincial Council                              ###
    ########################################################
    TallySheet_PCE-22:
      allOf:
        - $ref: '#/components/schemas/TallySheet'
      type: object
      description: Record of ballot papers of each ballot box of a polling station.
      properties:
        countingStartedAt:
          type: string
          format: data-time
        table:
          type: array
          items:
            type: object
            description: the count of ballot of a ballot box.
            properties:
              id:
                type: integer
                format: int64
              ballotBox:
                type: integer
              ballotCount:
                type: integer
    TallySheet_PCE-34:
      allOf:
        - $ref: '#/components/schemas/TallySheet'
      type: object
      description: >-
        Statement for number and grounds on which ballot papers have been
        rejected.
      properties:
        countingStartedAt:
          type: string
          format: data-time
        does_not_bear_the_official_mark:
          type: integer
        votes_are_given_for_more_than_one_recognized_political_party:
          type: integer
        votes_are_given_for_more_than_one_independent_group:
          type: integer
        votes_are_given_for_a_combination_of_one_or_more_recognized_political_parties_and_independent_groups:
          type: integer
        something_is_written_or_marked_by_which_the_voter_can_be_identified:
          type: integer
        unmarked:
          type: integer
        void_for_uncertainty:
          type: integer
    TallySheet_PCE-35:
      allOf:
        - $ref: '#/components/schemas/TallySheet'
      type: object
      description: >-
        Statement on the number of votes given to each recognized political
        party/ independent group from the counting centre.
      properties:
        table:
          type: array
          items:
            type: object
            description: >-
              votes given to a particular political party/ independent group
              approved by an agent.
            properties:
              id:
                type: integer
                format: int64
              partyId:
                type: integer
                format: int64
              vote_count:
                type: integer
              vote_count_in_words:
                type: string
              signed_agent:
                type: string
    TallySheet_PCE-31:
      allOf:
        - $ref: '#/components/schemas/TallySheet'
      type: object
      description: Statement for invalid ballot papers at the count of preferences.
      properties:
        table:
          type: array
          items:
            type: object
            description: >-
              Statement for invalid ballot papers at the count of preferences of
              a party
            properties:
              id:
                type: integer
                format: int64
              partyId:
                type: integer
                format: int64
              preferences_given_for_more_than_three_candidates:
                type: integer
              all_preferences_are_void_uncertainity:
                type: integer
              no_preferences_marked:
                type: integer

    TallySheet_CE-CO-PR-1:
      allOf:
        - $ref: '#/components/schemas/TallySheet'
      type: object
      description: Tally sheet of preferences of a 50 bundle of a party.
      properties:
        partyId:
          type: integer
          format: int64
        table:
          type: array
          items:
            type: object
            description: >-
              Statement for invalid ballot papers at the count of preferences of
              a party
            properties:
              id:
                type: integer
                format: int64
              candidateId:
                type: integer
                format: int64
              preferences_count:
                type: integer

    TallySheet_PRE-41:
      allOf:
        - $ref: '#/components/schemas/TallySheet'
      type: object
      description: Tally sheet of preferences of a 50 bundle of a party.
      properties:
        electoralDistrictId:
          type: integer
          format: int64
        pollingDivisionId:
          type: integer
          format: int64
        countingCentreId:
          type: integer
          format: int64
        party_wise_results:
          type: array
          items:
            type: object
            description: >-
              Statement for invalid ballot papers at the count of preferences of
              a party
            properties:
              partyId:
                type: integer
                format: int64
              voteCount:
                type: integer
                format: int64
security:
  - jwt: []