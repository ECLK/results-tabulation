openapi: 3.0.0
info:
  description: |
    Election Tally Sheet Service.
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "2.0.0-oas3"
  title: Tally Sheet
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  - name: tallySheet
    description: Access to tally sheets
  - name: invoice
    description: Access to invoices

paths:


  /ballot:
    get:
      tags:
        - invoice
      summary: Get all.
      operationId: api.BallotApi.get_all
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
        - name: electionId
          required: false
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ballot'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    #      security:
    #        - organization_auth:
    #            - 'read:org'
    post:
      tags:
        - invoice
      summary: Create.
      operationId: api.BallotApi.create
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ballot'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      #      security:
      #        - organization_auth:
      #            - 'write:org'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ballot'
        description: Ballot Object.
        required: True

  /ballot-box:
    get:
      tags:
        - invoice
      summary: Get all.
      operationId: api.BallotBoxApi.get_all
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
        - name: electionId
          required: false
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BallotBox'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    #      security:
    #        - organization_auth:
    #            - 'read:org'
    post:
      tags:
        - invoice
      summary: Create.
      operationId: api.BallotBoxApi.create
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BallotBox'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      #      security:
      #        - organization_auth:
      #            - 'write:org'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BallotBox'
        description: BallotBox Object.
        required: True

  /invoice:
    get:
      tags:
        - invoice
      summary: Get all.
      operationId: api.InvoiceApi.get_all
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
        - name: electionId
          required: false
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    #      security:
    #        - organization_auth:
    #            - 'read:org'
    post:
      tags:
        - invoice
      summary: Create.
      operationId: api.InvoiceApi.create
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      #      security:
      #        - organization_auth:
      #            - 'write:org'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
        description: Invoice Object.
        required: True

#
#  /invoice-item:
#    get:
#      tags:
#        - invoice
#      summary: Get all.
#      operationId: api.InvoiceApi.get_all
#      parameters:
#        - name: limit
#          in: query
#          description: Limit of the result array.
#          required: false
#          schema:
#            type: integer
#            default: 20
#        - name: offset
#          in: query
#          description: Offset of the result array.
#          required: false
#          schema:
#            type: integer
#            default: 0
#        - name: electionId
#          required: false
#          in: query
#          schema:
#            type: integer
#            format: int64
#      responses:
#        '200':
#          description: Successful operation.
#          content:
#            application/json:
#              schema:
#                type: array
#                items:
#                  $ref: '#/components/schemas/Invoice'
#        '400':
#          description: Bad request.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '401':
#          description: Unauthorized.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '404':
#          description: Resource was not found.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '500':
#          description: Unexpected error.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#    #      security:
#    #        - organization_auth:
#    #            - 'read:org'
#    post:
#      tags:
#        - invoice
#      summary: Create.
#      operationId: api.InvoiceApi.create
#      responses:
#        '200':
#          description: Successful operation.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Invoice'
#        '400':
#          description: Bad request.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '401':
#          description: Unauthorized.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '404':
#          description: Resource was not found.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '500':
#          description: Unexpected error.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#      #      security:
#      #        - organization_auth:
#      #            - 'write:org'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/Invoice'
#        description: Invoice Object.
#        required: True


  /tally-sheet:
    get:
      tags:
        - tallySheet
      summary: Get all the tally sheets.
      operationId: api.TallySheetApi.getAll
      parameters:
        - name: limit
          in: query
          description: Limit of the result array.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Offset of the result array.
          required: false
          schema:
            type: integer
            default: 0
        - name: electionId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: officeId
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: createdBy
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: code
          required: false
          in: query
          schema:
            type: string
            enum:
              - PCE-22
              - PCE-34
              - PCE-35
              - PCE-31
              - CE-CO-PR-1
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TallySheet'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    #      security:
    #        - organization_auth:
    #            - 'read:org'
    post:
      tags:
        - tallySheet
      summary: Create a tally sheet.
      operationId: api.TallySheetApi.create
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TallySheet'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      #      security:
      #        - organization_auth:
      #            - 'write:org'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TallySheet'
        description: Tally sheet object.
        required: True

  /tally-sheet/{tallySheetId}:
    get:
      tags:
        - tallySheet
      summary: Get tally sheet by ID
      operationId: api.TallySheetApi.get_by_id
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: string
        - name: tallySheetVersion
          in: query
          description: Tally sheet version
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TallySheet'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
        - tallySheet
      summary: Update tally sheet
      operationId: api.TallySheetApi.update
      parameters:
        - name: tallySheetId
          in: path
          description: Tally sheet ID
          required: true
          schema:
            type: string
        - name: tallySheetVersion
          in: query
          description: Tally sheet version
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TallySheet'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TallySheet'
        description: Updated tally sheet object.
        required: true

#  '/tally-sheet/{tallySheetId}/history':
#    parameters:
#      - name: tallySheetId
#        in: path
#        description: Tally sheet ID
#        required: true
#        schema:
#          type: string
#      - name: tallySheetVersion
#        in: path
#        description: Tally sheet version
#        required: true
#        schema:
#          type: string
#    get:
#      tags:
#        - tallySheetHistory
#      summary: Get tally sheet hostory
#      operationId: api.tallySheetHistory.getAll
#      responses:
#        '200':
#          description: Successful operation.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/TallySheetHistory'
#        '400':
#          description: Bad request.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '401':
#          description: Unauthorized.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '404':
#          description: Resource was not found.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#        '500':
#          description: Unexpected error.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiResponse'
#      security:
#        - organization_auth:
#            - 'read:org'

externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'

components:
  securitySchemes:
    organization_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:org': modify
            'read:org': read
    api_key:
      type: apiKey
      name: api_key
      in: header
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    TallySheetHistory:
      type: array
      items:
        type: object
        properties:
          version:
            type: integer
            format: int64
          createdBy:
            type: integer
            format: int64
          createdAt:
            type: string
            format: date-time
    TallySheet:
      type: object
      required:
        - electionId
        - officeId
        - code
      properties:
        id:
          type: integer
          format: int64
          default: 1
        version:
          type: integer
          format: int64
          default: 1
        electionId:
          type: integer
          format: int64
          default: 1
        officeId:
          type: integer
          format: int64
          default: 1
        createdBy:
          type: integer
          format: int64
          default: 1
        createdAt:
          type: string
          format: date-time
        code:
          type: string
          enum:
            - PCE-22
            - PCE-34
            - PCE-35
            - PCE-31
            - CE/ CO/ PR/ 1
            - PRE-41
            - ISSUING
            - RECEIVING


    ########################################################
    ###  Provincial Council                              ###
    ########################################################
    TallySheet_PCE-22:
      allOf:
        - $ref: '#/components/schemas/TallySheet'
      type: object
      description: Record of ballot papers of each ballot box of a polling station.
      properties:
        countingStartedAt:
          type: string
          format: data-time
        table:
          type: array
          items:
            type: object
            description: the count of ballot of a ballot box.
            properties:
              id:
                type: integer
                format: int64
              ballotBox:
                type: integer
              ballotCount:
                type: integer
    TallySheet_PCE-34:
      allOf:
        - $ref: '#/components/schemas/TallySheet'
      type: object
      description: >-
        Statement for number and grounds on which ballot papers have been
        rejected.
      properties:
        countingStartedAt:
          type: string
          format: data-time
        does_not_bear_the_official_mark:
          type: integer
        votes_are_given_for_more_than_one_recognized_political_party:
          type: integer
        votes_are_given_for_more_than_one_independent_group:
          type: integer
        votes_are_given_for_a_combination_of_one_or_more_recognized_political_parties_and_independent_groups:
          type: integer
        something_is_written_or_marked_by_which_the_voter_can_be_identified:
          type: integer
        unmarked:
          type: integer
        void_for_uncertainty:
          type: integer
    TallySheet_PCE-35:
      allOf:
        - $ref: '#/components/schemas/TallySheet'
      type: object
      description: >-
        Statement on the number of votes given to each recognized political
        party/ independent group from the counting centre.
      properties:
        table:
          type: array
          items:
            type: object
            description: >-
              votes given to a particular political party/ independent group
              approved by an agent.
            properties:
              id:
                type: integer
                format: int64
              partyId:
                type: integer
                format: int64
              vote_count:
                type: integer
              vote_count_in_words:
                type: string
              signed_agent:
                type: string
    TallySheet_PCE-31:
      allOf:
        - $ref: '#/components/schemas/TallySheet'
      type: object
      description: Statement for invalid ballot papers at the count of preferences.
      properties:
        table:
          type: array
          items:
            type: object
            description: >-
              Statement for invalid ballot papers at the count of preferences of
              a party
            properties:
              id:
                type: integer
                format: int64
              partyId:
                type: integer
                format: int64
              preferences_given_for_more_than_three_candidates:
                type: integer
              all_preferences_are_void_uncertainity:
                type: integer
              no_preferences_marked:
                type: integer

    TallySheet_CE-CO-PR-1:
      allOf:
        - $ref: '#/components/schemas/TallySheet'
      type: object
      description: Tally sheet of preferences of a 50 bundle of a party.
      properties:
        partyId:
          type: integer
          format: int64
        table:
          type: array
          items:
            type: object
            description: >-
              Statement for invalid ballot papers at the count of preferences of
              a party
            properties:
              id:
                type: integer
                format: int64
              candidateId:
                type: integer
                format: int64
              preferences_count:
                type: integer

    TallySheet_PRE-41:
      allOf:
        - $ref: '#/components/schemas/TallySheet'
      type: object
      description: Tally sheet of preferences of a 50 bundle of a party.
      properties:
        electoralDistrictId:
          type: integer
          format: int64
        pollingDivisionId:
          type: integer
          format: int64
        countingCentreId:
          type: integer
          format: int64
        party_wise_results:
          type: array
          items:
            type: object
            description: >-
              Statement for invalid ballot papers at the count of preferences of
              a party
            properties:
              partyId:
                type: integer
                format: int64
              voteCount:
                type: integer
                format: int64





    Invoice:
      type: object
      required:
        - electionId
        - issuingOfficeId
        - receivingOfficeId
        - issuedTo
        - invoiceItems
      properties:
        invoiceId:
          type: integer
          format: int64
        electionId:
          type: integer
          format: int64
        issuingOfficeId:
          type: integer
          format: int64
        receivingOfficeId:
          type: integer
          format: int64
        issuedBy:
          type: integer
          format: int64
        issuedTo:
          type: integer
          format: int64
        issuedAt:
          type: string
          format: date-time
        invoiceItems:
          type: array
          items:
            type: object
            properties:
              invoiceId:
                type: integer
                format: int64
              invoiceItemId:
                type: integer
                format: int64
              receivedBy:
                type: integer
                format: int64
              receivedFrom:
                type: integer
                format: int64
              receivedAt:
                type: string
                format: date-time

    InvoiceItem:
      type: object
      required:
        - invoiceId
        - invoiceItemId
      properties:
        invoiceId:
          type: integer
          format: int64
        invoiceItemId:
          type: integer
          format: int64
        receivedBy:
          type: integer
          format: int64
        receivedFrom:
          type: integer
          format: int64
        receivedAt:
          type: string
          format: date-time


    Ballot:
      type: object
      required:
        - ballotId
      properties:
        ballotId:
          type: string
        invoiceItemId:
          type: integer
          format: int64


    BallotBox:
      type: object
      required:
        - ballotBoxId
      properties:
        ballotBoxId:
          type: string
        invoiceItemId:
          type: integer
          format: int64


